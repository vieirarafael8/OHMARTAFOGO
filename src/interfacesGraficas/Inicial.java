/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfacesGraficas;

import Classes.Configuration;
import Classes.Jenetic;
import Classes.Point;
import java.awt.Checkbox;
import java.awt.Rectangle;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.ChangeListener;
import javax.swing.plaf.basic.BasicTextUI;
import javax.swing.table.DefaultTableModel;
import jenetic.interfaces.UIConfiguration;

/**
 *
 * @author martasantos
 */
public class Inicial extends javax.swing.JFrame {

    private Point point;
    private Configuration config;
    private Jenetic jen;
   
    /**
     * Creates new form Inicial
     */
    public Inicial() {
        initComponents();
        checkBox(false);
        jCheckBox1.setSelected(true);
        Slider();
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        alturaCenario = new javax.swing.JLabel();
        larguraCenario = new javax.swing.JLabel();
        insertAlturaCen = new javax.swing.JTextField();
        insertLarguraCen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        insertXPontoInicial = new javax.swing.JTextField();
        insertYPontoInicial = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaObstaculos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Cenario = new javax.swing.JLabel();
        pontoInicial = new javax.swing.JLabel();
        pontoFinal = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        insertXPontoFinal = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        insertYPontoFinal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        insertIteracoes = new javax.swing.JTextField();
        cruzamentos = new javax.swing.JLabel();
        insertCruzamentos = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        insertSolucoesAleatorias = new javax.swing.JTextField();
        populacao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        muta = new javax.swing.JTextField();
        cruzamentos1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        melhorSolu = new javax.swing.JTextField();
        jSlider1 = new javax.swing.JSlider();
        jTextField1 = new javax.swing.JTextField();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        alturaCenario.setText("Altura: ");

        larguraCenario.setText("Largura:");

        insertAlturaCen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertAlturaCenActionPerformed(evt);
            }
        });

        insertLarguraCen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertLarguraCenActionPerformed(evt);
            }
        });

        jLabel3.setText("X:");

        jLabel4.setText("Y:");

        insertXPontoInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertXPontoInicialActionPerformed(evt);
            }
        });

        insertYPontoInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertYPontoInicialActionPerformed(evt);
            }
        });

        tabelaObstaculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "X", "Y", "Largura", "Altura"
            }
        ));
        jScrollPane2.setViewportView(tabelaObstaculos);

        jLabel5.setText("Obstáculos:");

        jButton1.setText("Siga");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Cenario.setText("Cenário:");

        pontoInicial.setText("Ponto Inicial:");

        pontoFinal.setText("Ponto Final:");

        jLabel9.setText("X:");

        insertXPontoFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertXPontoFinalActionPerformed(evt);
            }
        });

        jLabel10.setText("Y:");

        insertYPontoFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertYPontoFinalActionPerformed(evt);
            }
        });

        jLabel11.setText("Taxa Mutação: ");

        jLabel12.setText("Iterações:");

        insertIteracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertIteracoesActionPerformed(evt);
            }
        });

        cruzamentos.setText("Cruzamentos:");

        insertCruzamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertCruzamentosActionPerformed(evt);
            }
        });

        jLabel1.setText("Nº de Soluções aleatórias:");

        insertSolucoesAleatorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertSolucoesAleatoriasActionPerformed(evt);
            }
        });

        populacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populacaoActionPerformed(evt);
            }
        });

        jLabel2.setText("População:");

        cruzamentos1.setText("Nº mutações:");

        jLabel6.setText("Pretende editar as soluções?");

        jLabel7.setText("Nº Melhores soluções:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(264, 264, 264))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(larguraCenario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(insertLarguraCen, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Cenario)
                            .addComponent(insertAlturaCen, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)))
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(pontoFinal))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(populacao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(insertYPontoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(223, 223, 223))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(insertXPontoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9))
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertXPontoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(insertYPontoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(200, 200, 200))))
            .addGroup(layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(pontoInicial)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(jLabel12))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addComponent(insertIteracoes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(alturaCenario))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(melhorSolu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(insertSolucoesAleatorias, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(insertCruzamentos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(cruzamentos)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(muta, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cruzamentos1)
                        .addGap(53, 53, 53))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Cenario)
                                    .addComponent(pontoInicial)
                                    .addComponent(pontoFinal))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(alturaCenario)
                                        .addComponent(insertAlturaCen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(insertXPontoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3)))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(insertYPontoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(larguraCenario)
                                    .addComponent(insertLarguraCen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(insertXPontoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(insertYPontoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(populacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertIteracoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cruzamentos)
                                    .addComponent(cruzamentos1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(insertCruzamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(muta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 39, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(insertSolucoesAleatorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(melhorSolu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)))
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        insertSolucoesAleatorias.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertYPontoInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertYPontoInicialActionPerformed
        
    }//GEN-LAST:event_insertYPontoInicialActionPerformed

    private Point criarPontoInicial (){
        String xPontoInicial= insertXPontoInicial.getText();
        String yPontoIncial= insertYPontoInicial.getText();
        if(insertXPontoInicial.getText()==null){
                System.out.println("insira o x do ponto inicial");
            }
            if(insertYPontoInicial.getText()==null){
                System.out.println("insira o y do ponto inicial");
            }
        Point pi= null;
        
        try{
            
        }catch(Exception ex){
            
            int xinit = Integer.parseInt(xPontoInicial);
           int yinit = Integer.parseInt(yPontoIncial);
          pi=new Point(xinit, yinit);
          config.setStart(pi);
        }
        
        return pi;      
    }

    private Point criarPontoFinal (){
        String xPontoFinal= insertXPontoFinal.getText();
        String yPontoFinal= insertYPontoFinal.getText();
       if(insertXPontoInicial.getText()==null){
                System.out.println("insira o x do ponto final");
            }
            if(insertYPontoInicial.getText()==null){
                System.out.println("insira o y do ponto final");
            }
        Point pf= null;
        
        try{
            
        }catch(Exception ex){
           int xfinal = Integer.parseInt(xPontoFinal);
           int yfinal = Integer.parseInt(yPontoFinal);
          pf=new Point(xfinal, yfinal);
          config.setEnd(pf);
        }
        return pf;
        
    }
    
    public Inicial(JLabel pontoFinal, JLabel pontoInicial) {
        this.pontoFinal = pontoFinal;
        this.pontoInicial = pontoInicial;
    }

    public JLabel getPontoFinal() {
        return pontoFinal;
    }

    public void setPontoFinal(JLabel pontoFinal) {
        this.pontoFinal = pontoFinal;
    }

    public JLabel getPontoInicial() {
        return pontoInicial;
    }

    public void setPontoInicial(JLabel pontoInicial) {
        this.pontoInicial = pontoInicial;
    }
    
        
    private List<Rectangle> TratarRect(){
        List<Rectangle> obstacles = new ArrayList<>();
        JTable table = tabelaObstaculos;
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        for(int i=0;i<model.getRowCount();i++){
            if((model.getValueAt(i, 0)!= null) && (model.getValueAt(i,1)!= null)&& (model.getValueAt(i,2)!= null)&& (model.getValueAt(i,3)!= null)){
                int x = (int) model.getValueAt(i, 0);
                int y = (int) model.getValueAt(i, 1);
                int width = (int) model.getValueAt(i, 2);
                int height = (int) model.getValueAt(i, 3);
            
                Rectangle rectangle = new Rectangle(x,y,width,height);
                obstacles.add(rectangle);
            }
        }
        return obstacles;
    
    }
    
    private void checkBox (boolean aparece){
        
        JCheckBox cb = jCheckBox1;
        cb.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) {
                
                int i = ie.getStateChange();

                if (!(i == 1)) {
                    jLabel1.setVisible(aparece);
                    cruzamentos.setVisible(aparece);
                    cruzamentos1.setVisible(aparece);
                    insertSolucoesAleatorias.setVisible(aparece);
                    insertCruzamentos.setVisible(aparece);
                    muta.setVisible(aparece);
                    melhorSolu.setVisible(aparece);
                    jLabel7.setVisible(aparece);
                } else {
                     jLabel1.setVisible(true);
                    cruzamentos.setVisible(true);
                    cruzamentos1.setVisible(true);
                    insertSolucoesAleatorias.setVisible(true);
                    insertCruzamentos.setVisible(true);
                    muta.setVisible(true);
                    melhorSolu.setVisible(true);
                    jLabel7.setVisible(true);
              }
            }
        });
        
    }
    
    
    private float mutacoes(JTextField taxamuta){
        String s=taxamuta.getText();
        try{
            float d= Float.valueOf(s);
            return d;
        }catch(NumberFormatException ex){
            System.out.println("s");
        }
        return -1;
    }
    
    private float mutacoesDiv(){
        if(jTextField1.getText().isEmpty()){
            float x= mutacoes(jTextField1);
            float minimo= -x;
            float maximo= x;
            
            Random random= new Random();
            float ra = minimo+ random.nextFloat()*(maximo-minimo);
            return ra;
            
        }else{
            System.out.println("FUDEU");
        }
        return -1;
    }
    
    private void Slider(){
        JSlider j= jSlider1;
        j.setMaximum(5);
        j.setMinimum(0);
        j.setValue(0);
        j.setMinorTickSpacing(1);
        j.setMajorTickSpacing(1);
        j.setPaintLabels(true);
        j.setPaintTicks(true);
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Configuration configg = new Configuration(getWidth(),getHeight(),TratarRect(), criarPontoFinal(),criarPontoFinal());      
        
        //necessárias
        
        int ite = Integer.parseInt(insertIteracoes.getText());
        int popul = Integer.parseInt(populacao.getText());
        
        if(insertIteracoes.getText()==null){
            JOptionPane.showMessageDialog(this, "Introduza as interações!!");
        }
        
        if(populacao.getText()==null){
            JOptionPane.showMessageDialog(this, "Introduza a população!!");
        }
        
        //se escolher editar solucoes
        int sol = Integer.parseInt(insertSolucoesAleatorias.getText());
        int cruz = Integer.parseInt(insertCruzamentos.getText());
        int mutaaa= Integer.parseInt(muta.getText());
        int mSolu = Integer.parseInt(melhorSolu.getText());
        

       
        Jenetic jen1=new Jenetic(popul, sol, cruz, mutaaa, ite);
        
        jen1.run();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void insertYPontoFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertYPontoFinalActionPerformed
        
        
    }//GEN-LAST:event_insertYPontoFinalActionPerformed

    private void insertAlturaCenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertAlturaCenActionPerformed
        
        String alturaCen = insertAlturaCen.getText();
        int altura = Integer.parseInt(alturaCen);
        config.setHeight(altura);
         
    }//GEN-LAST:event_insertAlturaCenActionPerformed

    private void insertLarguraCenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertLarguraCenActionPerformed
        String larguraCen = insertLarguraCen.getText();
        int largura = Integer.parseInt(larguraCen);
        config.setWidth(largura);
    }//GEN-LAST:event_insertLarguraCenActionPerformed

    private void insertCruzamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertCruzamentosActionPerformed
        String cruzamentos= insertCruzamentos.getText();
        
        int cruza = Integer.parseInt(cruzamentos);
        
        jen.setCrossoverSize(cruza);
    }//GEN-LAST:event_insertCruzamentosActionPerformed

    private void insertIteracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertIteracoesActionPerformed
        String iteracoes= insertIteracoes.getText();

        int itera = Integer.parseInt(iteracoes);
        jen.setCrossoverSize(itera);
    }//GEN-LAST:event_insertIteracoesActionPerformed

    private void insertXPontoInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertXPontoInicialActionPerformed
        
    }//GEN-LAST:event_insertXPontoInicialActionPerformed

    private void insertXPontoFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertXPontoFinalActionPerformed

    }//GEN-LAST:event_insertXPontoFinalActionPerformed

    private void insertSolucoesAleatoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertSolucoesAleatoriasActionPerformed
        String solucoesAleatorias= insertSolucoesAleatorias.getText();
        int solAl = Integer.parseInt(solucoesAleatorias);
        jen.setRandomSize(solAl);
    }//GEN-LAST:event_insertSolucoesAleatoriasActionPerformed

    private void populacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_populacaoActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Cenario;
    private javax.swing.JLabel alturaCenario;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel cruzamentos;
    private javax.swing.JLabel cruzamentos1;
    private javax.swing.JTextField insertAlturaCen;
    private javax.swing.JTextField insertCruzamentos;
    private javax.swing.JTextField insertIteracoes;
    private javax.swing.JTextField insertLarguraCen;
    private javax.swing.JTextField insertSolucoesAleatorias;
    private javax.swing.JTextField insertXPontoFinal;
    private javax.swing.JTextField insertXPontoInicial;
    private javax.swing.JTextField insertYPontoFinal;
    private javax.swing.JTextField insertYPontoInicial;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel larguraCenario;
    private javax.swing.JTextField melhorSolu;
    private javax.swing.JTextField muta;
    private javax.swing.JLabel pontoFinal;
    private javax.swing.JLabel pontoInicial;
    private javax.swing.JTextField populacao;
    private javax.swing.JTable tabelaObstaculos;
    // End of variables declaration//GEN-END:variables
}
